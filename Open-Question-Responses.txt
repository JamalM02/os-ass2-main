Assigment 2 Responses
Operating Systems
Semester 1 5784

Student 1:Jamal Majadle TZ-207513722
Student 2:Nagham Mousa TZ-208260018

----------------------------------------------------------------

(calls) 1. 6627  read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0"..., 832) = 832

- 6627 : This is the process ID (PID) of the process that made the system call.

- read: Indicates that this is a read system call.

- 3: The file descriptor (FD) on which the read is performed. In this case, it's file descriptor 3. File descriptors represent open files or I/O streams.

- "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0"... : This is the buffer where the data will be read into.

- , 832: The number of bytes to read.

- = 832: Indicates that the read system call successfully read 832 bytes.


(calls) 2. 6629  write(1, "tests/leaves-of-grass.txt: 15922"..., 65) = 65

- 6629: The process ID (PID) of the process that made the system call.

- write: Indicates that this is a write system call.

- 1: The file descriptor (FD) on which the write is performed. In this case, 1 typically represents the standard output (stdout).

- "tests/leaves-of-grass.txt: 15922"...: The buffer containing the data to be written through the given path.

- , 65: The number of bytes to write. 

- = 65: Indicates that the write system call successfully wrote 65 bytes.


(calls) 3. running the strace command without the -f,doesn't show the number of the process ID that made the system call on each call
        So now the strace is not following the child processes after fork.

(calls) 4. We used strdup() to manage memory allocation in order to avoid modifying the variable 'line' throughout the process of finding the word lengths because of 
        using strtok() which affect the memory. This is because in the 'line_uniform_length' function, we are using a pointer to the 'line' variable, which otherwise 
        modifys the original 'line' variable and affect its memory. 
        We have 25501 calls with the malloc library.

(calls) 5. The primary purpose of using fgets in our code is to read lines from the input file, so we can process each line individually.
        We have 25497 calls with the fgets library.

(calls) 6. In this program we are running three files: pride-sentences.txt, leaves-of-grass.txt and jekyll-hyde-sentences.txt

1) strtok has 54363 calls.
   In our program strtok is being used to separate the words in the given line by spaces (one call for each file).


2)  word_length has 49666 calls.
    In this program it's a function that we've called to get the individual word length.

3)  malloc has 25501 calls.
    In our program the malloc function used to manage memory allocation in order to avoid modifying the variable 'line' throughout the process
    of finding the word lengths because of using strtok() which affect the memory.

4)  free has 25500 calls.
    In our program is used to deallocate memory that was previously allocated using strdup function.

5)  fgets has 25497 calls.
    In our program has used it to read lines of text from the input file, allowing us to process the content of each line in subsequent parts of the program.

(calls) 7.: 

  (i) execve: This is a system call used to execute a program. It replaces the current process image with a new one
      in our program the "uniform-length" is being executed with three file names as command-line arguments: "tests/pride-sentences.txt," 
      "tests/leaves-of-grass.txt," and "tests/jekyll-hyde-sentences.txt."

 (ii) brk: This is a system call used for dynamic memory allocation in a process's heap by adjusting the program break and that's 
      because the process can request more or less heap space.

(iii) openat: This is a system call used to open or creat a file.

 (iv) mmap: This is a system call which is used to map files into memory.

  (v) prlimit64: This is the system call being invoked. It's used to set resource limits for a process.

 (vi) clone: This is a system call which is used to create a new process or thread.

(vii) exit_group: This system call is used to terminate all threads in a process. The parameter in it is called an exit status and it's 
      a value that indicates the result of the process execution.
